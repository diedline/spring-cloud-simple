package com.cihon.changan.common.model.vo;

import java.util.ArrayList;
import java.util.List;

public class TStatisticsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public TStatisticsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOneIsNull() {
            addCriterion("one is null");
            return (Criteria) this;
        }

        public Criteria andOneIsNotNull() {
            addCriterion("one is not null");
            return (Criteria) this;
        }

        public Criteria andOneEqualTo(Integer value) {
            addCriterion("one =", value, "one");
            return (Criteria) this;
        }

        public Criteria andOneNotEqualTo(Integer value) {
            addCriterion("one <>", value, "one");
            return (Criteria) this;
        }

        public Criteria andOneGreaterThan(Integer value) {
            addCriterion("one >", value, "one");
            return (Criteria) this;
        }

        public Criteria andOneGreaterThanOrEqualTo(Integer value) {
            addCriterion("one >=", value, "one");
            return (Criteria) this;
        }

        public Criteria andOneLessThan(Integer value) {
            addCriterion("one <", value, "one");
            return (Criteria) this;
        }

        public Criteria andOneLessThanOrEqualTo(Integer value) {
            addCriterion("one <=", value, "one");
            return (Criteria) this;
        }

        public Criteria andOneIn(List<Integer> values) {
            addCriterion("one in", values, "one");
            return (Criteria) this;
        }

        public Criteria andOneNotIn(List<Integer> values) {
            addCriterion("one not in", values, "one");
            return (Criteria) this;
        }

        public Criteria andOneBetween(Integer value1, Integer value2) {
            addCriterion("one between", value1, value2, "one");
            return (Criteria) this;
        }

        public Criteria andOneNotBetween(Integer value1, Integer value2) {
            addCriterion("one not between", value1, value2, "one");
            return (Criteria) this;
        }

        public Criteria andTwoIsNull() {
            addCriterion("two is null");
            return (Criteria) this;
        }

        public Criteria andTwoIsNotNull() {
            addCriterion("two is not null");
            return (Criteria) this;
        }

        public Criteria andTwoEqualTo(Integer value) {
            addCriterion("two =", value, "two");
            return (Criteria) this;
        }

        public Criteria andTwoNotEqualTo(Integer value) {
            addCriterion("two <>", value, "two");
            return (Criteria) this;
        }

        public Criteria andTwoGreaterThan(Integer value) {
            addCriterion("two >", value, "two");
            return (Criteria) this;
        }

        public Criteria andTwoGreaterThanOrEqualTo(Integer value) {
            addCriterion("two >=", value, "two");
            return (Criteria) this;
        }

        public Criteria andTwoLessThan(Integer value) {
            addCriterion("two <", value, "two");
            return (Criteria) this;
        }

        public Criteria andTwoLessThanOrEqualTo(Integer value) {
            addCriterion("two <=", value, "two");
            return (Criteria) this;
        }

        public Criteria andTwoIn(List<Integer> values) {
            addCriterion("two in", values, "two");
            return (Criteria) this;
        }

        public Criteria andTwoNotIn(List<Integer> values) {
            addCriterion("two not in", values, "two");
            return (Criteria) this;
        }

        public Criteria andTwoBetween(Integer value1, Integer value2) {
            addCriterion("two between", value1, value2, "two");
            return (Criteria) this;
        }

        public Criteria andTwoNotBetween(Integer value1, Integer value2) {
            addCriterion("two not between", value1, value2, "two");
            return (Criteria) this;
        }

        public Criteria andThreeIsNull() {
            addCriterion("three is null");
            return (Criteria) this;
        }

        public Criteria andThreeIsNotNull() {
            addCriterion("three is not null");
            return (Criteria) this;
        }

        public Criteria andThreeEqualTo(Integer value) {
            addCriterion("three =", value, "three");
            return (Criteria) this;
        }

        public Criteria andThreeNotEqualTo(Integer value) {
            addCriterion("three <>", value, "three");
            return (Criteria) this;
        }

        public Criteria andThreeGreaterThan(Integer value) {
            addCriterion("three >", value, "three");
            return (Criteria) this;
        }

        public Criteria andThreeGreaterThanOrEqualTo(Integer value) {
            addCriterion("three >=", value, "three");
            return (Criteria) this;
        }

        public Criteria andThreeLessThan(Integer value) {
            addCriterion("three <", value, "three");
            return (Criteria) this;
        }

        public Criteria andThreeLessThanOrEqualTo(Integer value) {
            addCriterion("three <=", value, "three");
            return (Criteria) this;
        }

        public Criteria andThreeIn(List<Integer> values) {
            addCriterion("three in", values, "three");
            return (Criteria) this;
        }

        public Criteria andThreeNotIn(List<Integer> values) {
            addCriterion("three not in", values, "three");
            return (Criteria) this;
        }

        public Criteria andThreeBetween(Integer value1, Integer value2) {
            addCriterion("three between", value1, value2, "three");
            return (Criteria) this;
        }

        public Criteria andThreeNotBetween(Integer value1, Integer value2) {
            addCriterion("three not between", value1, value2, "three");
            return (Criteria) this;
        }

        public Criteria andOneOrderIsNull() {
            addCriterion("one_order is null");
            return (Criteria) this;
        }

        public Criteria andOneOrderIsNotNull() {
            addCriterion("one_order is not null");
            return (Criteria) this;
        }

        public Criteria andOneOrderEqualTo(Integer value) {
            addCriterion("one_order =", value, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderNotEqualTo(Integer value) {
            addCriterion("one_order <>", value, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderGreaterThan(Integer value) {
            addCriterion("one_order >", value, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("one_order >=", value, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderLessThan(Integer value) {
            addCriterion("one_order <", value, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderLessThanOrEqualTo(Integer value) {
            addCriterion("one_order <=", value, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderIn(List<Integer> values) {
            addCriterion("one_order in", values, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderNotIn(List<Integer> values) {
            addCriterion("one_order not in", values, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderBetween(Integer value1, Integer value2) {
            addCriterion("one_order between", value1, value2, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andOneOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("one_order not between", value1, value2, "oneOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderIsNull() {
            addCriterion("two_order is null");
            return (Criteria) this;
        }

        public Criteria andTwoOrderIsNotNull() {
            addCriterion("two_order is not null");
            return (Criteria) this;
        }

        public Criteria andTwoOrderEqualTo(Integer value) {
            addCriterion("two_order =", value, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderNotEqualTo(Integer value) {
            addCriterion("two_order <>", value, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderGreaterThan(Integer value) {
            addCriterion("two_order >", value, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("two_order >=", value, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderLessThan(Integer value) {
            addCriterion("two_order <", value, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderLessThanOrEqualTo(Integer value) {
            addCriterion("two_order <=", value, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderIn(List<Integer> values) {
            addCriterion("two_order in", values, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderNotIn(List<Integer> values) {
            addCriterion("two_order not in", values, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderBetween(Integer value1, Integer value2) {
            addCriterion("two_order between", value1, value2, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andTwoOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("two_order not between", value1, value2, "twoOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderIsNull() {
            addCriterion("three_order is null");
            return (Criteria) this;
        }

        public Criteria andThreeOrderIsNotNull() {
            addCriterion("three_order is not null");
            return (Criteria) this;
        }

        public Criteria andThreeOrderEqualTo(Integer value) {
            addCriterion("three_order =", value, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderNotEqualTo(Integer value) {
            addCriterion("three_order <>", value, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderGreaterThan(Integer value) {
            addCriterion("three_order >", value, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("three_order >=", value, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderLessThan(Integer value) {
            addCriterion("three_order <", value, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderLessThanOrEqualTo(Integer value) {
            addCriterion("three_order <=", value, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderIn(List<Integer> values) {
            addCriterion("three_order in", values, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderNotIn(List<Integer> values) {
            addCriterion("three_order not in", values, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderBetween(Integer value1, Integer value2) {
            addCriterion("three_order between", value1, value2, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andThreeOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("three_order not between", value1, value2, "threeOrder");
            return (Criteria) this;
        }

        public Criteria andAIdIsNull() {
            addCriterion("a_id is null");
            return (Criteria) this;
        }

        public Criteria andAIdIsNotNull() {
            addCriterion("a_id is not null");
            return (Criteria) this;
        }

        public Criteria andAIdEqualTo(Integer value) {
            addCriterion("a_id =", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdNotEqualTo(Integer value) {
            addCriterion("a_id <>", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdGreaterThan(Integer value) {
            addCriterion("a_id >", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("a_id >=", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdLessThan(Integer value) {
            addCriterion("a_id <", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdLessThanOrEqualTo(Integer value) {
            addCriterion("a_id <=", value, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdIn(List<Integer> values) {
            addCriterion("a_id in", values, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdNotIn(List<Integer> values) {
            addCriterion("a_id not in", values, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdBetween(Integer value1, Integer value2) {
            addCriterion("a_id between", value1, value2, "aId");
            return (Criteria) this;
        }

        public Criteria andAIdNotBetween(Integer value1, Integer value2) {
            addCriterion("a_id not between", value1, value2, "aId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_statistics
     *
     * @mbg.generated do_not_delete_during_merge Sat Jun 08 11:59:09 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_statistics
     *
     * @mbg.generated Sat Jun 08 11:59:09 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}